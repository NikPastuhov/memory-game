{"version":3,"sources":["store/constants/gameInfo.js","store/gameInfoReducer.js","store/index.js","components/Tab/TabButton.js","components/Info/Start.js","components/Game/Cell.js","helpers/getRandomIndex.js","helpers/shuffleArray.js","helpers/currentCards.js","components/Timer.js","components/Game/Board.js","components/Info/Final.js","components/Tab/Tab.js","components/Info/Records.js","components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["START","GAME","FINAL","RECORDS","CREATE_USER","ADD_TIME","ADD_RECORD","CHANGE_CURRENT_PAGE","CHANGE_TIMER_FIRST_START","defaultState","user","name","boardSize","time","records","currentPage","timerFirstStart","rootReducer","combineReducers","game","state","action","type","payload","store","createStore","composeWithDevTools","TabButton","text","value","defaultChecked","className","id","htmlFor","Start","useState","userName","setUserName","activeTab","setActiveTab","dispatch","useDispatch","placeholder","onChange","event","target","onClick","Cell","isFlipped","card","src","getRandom","min","max","Math","floor","random","shuffle","array","temporaryValue","randomIndex","currentIndex","length","getCurrentCards","variants","size","useVariants","cards","index","splice","padWithZero","num","numStr","toString","Clock","cardsCounter","minutes","setMinutes","seconds","setSeconds","storedTimer","setStoredTimer","firstStart","useSelector","useEffect","clearInterval","newTimer","setInterval","prevSecs","prevMins","start","setTime","OPTIONS","Board","useMemo","openedCard","setOpenedCard","matched","setMatched","setCardsCounter","firstMatched","secondMatched","setTimeout","initMatchOptions","style","gridTemplate","map","includes","isVisible","opened","flipCardHandler","Final","Tab","record","Records","sizeFilter","filter","records2x2","records4x4","records6x6","Game","page","alt","renderCurrentPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddfa09d2.chunk.js","sourcesContent":["export const START = 'START';\r\nexport const GAME = 'GAME';\r\nexport const FINAL = 'FINAL';\r\nexport const RECORDS = 'RECORDS';\r\n\r\nexport const TWO = 2;\r\nexport const FOUR = 4;\r\nexport const SIX = 6;\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const ADD_TIME = 'ADD_TIME';\r\nexport const ADD_RECORD = 'ADD_RECORD';\r\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\r\nexport const CHANGE_TIMER_FIRST_START = 'CHANGE_TIMER_FIRST_START';\r\n","import {\r\n    ADD_RECORD,\r\n    ADD_TIME,\r\n    CHANGE_CURRENT_PAGE,\r\n    CHANGE_TIMER_FIRST_START,\r\n    CREATE_USER,\r\n    START\r\n} from \"./constants/gameInfo\";\r\n\r\nconst defaultState = {\r\n    user: {\r\n        name: '', //anonymous\r\n        boardSize: 2,\r\n        time: null\r\n    },\r\n\r\n    records: [\r\n        {\r\n            name: 'Name1',\r\n            boardSize: 2,\r\n            time: '00:07'\r\n        },\r\n        {\r\n            name: 'Name2',\r\n            boardSize: 2,\r\n            time: '00:07'\r\n        },\r\n        {\r\n            name: 'Name3',\r\n            boardSize: 4,\r\n            time: '00:07'\r\n        },\r\n        {\r\n            name: 'Name4',\r\n            boardSize: 4,\r\n            time: '00:07'\r\n        },\r\n    ],\r\n    currentPage: START,\r\n    timerFirstStart: true\r\n}\r\n\r\nexport const gameInfoReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_USER:\r\n            return {...state, user: state.user = action.payload}\r\n        case ADD_TIME:\r\n            return {...state, user: {...state.user, time: action.payload} }\r\n        case ADD_RECORD:\r\n            return {...state, records: state.records = [...state.records, action.payload]}\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload}\r\n        case CHANGE_TIMER_FIRST_START:\r\n            return {...state, timerFirstStart: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {gameInfoReducer} from './gameInfoReducer'\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    game: gameInfoReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());","import React from 'react';\r\n\r\nconst TabButton = ({text, value, name, defaultChecked}) => {\r\n    return (\r\n        <div className=\"tab-button\">\r\n            <input\r\n                className=\"custom-radio\"\r\n                type=\"radio\"\r\n                id={value}\r\n                name={name}\r\n                value={value}\r\n                defaultChecked={defaultChecked}\r\n            />\r\n            <label className=\"tab-button-text\" htmlFor={value}>\r\n                <span>{text}</span>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabButton;","import React, {useState} from 'react';\r\nimport {CHANGE_CURRENT_PAGE, CREATE_USER, FOUR, GAME, SIX, TWO} from \"../../store/constants/gameInfo\";\r\nimport TabButton from \"../Tab/TabButton\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport './info.scss';\r\n\r\nconst Start = () => {\r\n    const [userName, setUserName] = useState('')\r\n    const [activeTab, setActiveTab] = useState('2')\r\n    const dispatch = useDispatch();\r\n\r\n    const toGame = () => {\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: GAME})\r\n    }\r\n\r\n    const saveUserInfo = () => {\r\n        dispatch({type: CREATE_USER, payload: {name: userName || 'anonymous', boardSize: +activeTab}})\r\n    }\r\n\r\n    const startGameHandler = () => {\r\n        saveUserInfo();\r\n        toGame();\r\n    }\r\n\r\n    const changeNameHandler = (event) => {\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const onChangeValue = (event) => {\r\n        setActiveTab(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-container flex-center\">\r\n            <div className=\"menu-page\">\r\n                <h1>Memory Game</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your name\"\r\n                    value={userName}\r\n                    onChange={changeNameHandler}\r\n                />\r\n                <div className=\"tab-buttons-box\" onChange={onChangeValue}>\r\n                    <TabButton text=\"2x2\" value={TWO} name=\"boardSize\" defaultChecked={activeTab == TWO} />\r\n                    <TabButton text=\"4x4\" value={FOUR} name=\"boardSize\" />\r\n                    <TabButton text=\"6x6\" value={SIX} name=\"boardSize\" />\r\n                </div>\r\n                <button className=\"pink-orange big-button\" onClick={startGameHandler}>Start!</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Start;","import React from 'react';\r\n\r\nconst Cell = ({isFlipped, onClick, card}) => {\r\n\r\n    let className = 'cell';\r\n    if (isFlipped) {\r\n        className += ' flipped';\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            <div className=\"inner\">\r\n                <div className=\"front\">\r\n                    <img src={`/images/${card.src}`} />\r\n                </div>\r\n                <div className=\"back\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cell;","function getRandom(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport default getRandom","function shuffle(array) {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport default shuffle","import getRandom from \"./getRandomIndex\";\r\nimport shuffle from \"./shuffleArray\";\r\n\r\nfunction getCurrentCards(variants, size) {\r\n    const useVariants = [...variants]\r\n    const boardSize = size*size;\r\n    let cards = [];\r\n\r\n    while(cards.length !== boardSize) {\r\n        const index = getRandom(0, useVariants.length - 1);\r\n        const card = useVariants[index]\r\n\r\n        cards = [...cards, card, card]\r\n        useVariants.splice(index, 1);\r\n    }\r\n\r\n    return shuffle(cards);\r\n}\r\n\r\nexport default getCurrentCards;","import React, { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_TIME, CHANGE_TIMER_FIRST_START} from \"../store/constants/gameInfo\";\r\n\r\nconst padWithZero = num => {\r\n    const numStr = num.toString();\r\n    return numStr.length === 1 ? \"0\" + numStr : numStr;\r\n};\r\n\r\nconst INIT_SECONDS = 0;\r\nconst INIT_MINUTES = 0;\r\n\r\nconst Clock = ({cardsCounter}) => {\r\n    const dispatch = useDispatch();\r\n    const [minutes, setMinutes] = useState(INIT_MINUTES);\r\n    const [seconds, setSeconds] = useState(INIT_SECONDS);\r\n    const [storedTimer, setStoredTimer] = useState(null);\r\n    const firstStart = useSelector(state => state.game.timerFirstStart);\r\n\r\n    const changeTimerFirstStart = (isFirst) => {\r\n        dispatch({type: CHANGE_TIMER_FIRST_START, payload: isFirst})\r\n    }\r\n\r\n    const start = () => {\r\n        if (storedTimer) {\r\n            clearInterval(storedTimer);\r\n            setMinutes(INIT_MINUTES);\r\n            setSeconds(INIT_SECONDS);\r\n        }\r\n        const newTimer = setInterval(() => {\r\n            setSeconds(prevSecs => {\r\n                if (prevSecs === 59) {\r\n                    setMinutes(prevMins => prevMins + 1);\r\n                    return 0;\r\n                } else return prevSecs + 1;\r\n            });\r\n        }, 1000);\r\n\r\n        setStoredTimer(newTimer);\r\n    };\r\n\r\n    const setTime = (seconds, minutes) => {\r\n        dispatch({type: ADD_TIME, payload: `${padWithZero(minutes)}:${padWithZero(seconds)} `})\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (firstStart) {\r\n            start();\r\n            changeTimerFirstStart(false);\r\n        }\r\n\r\n        if(cardsCounter === 0) {\r\n            setTime(seconds, minutes);\r\n        }\r\n\r\n    }, [cardsCounter])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{`${padWithZero(minutes)}:${padWithZero(seconds)}`}</h1>\r\n        </div>\r\n    );\r\n};\r\nexport default Clock;","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport Cell from \"./Cell\";\r\nimport getCurrentCards from \"../../helpers/currentCards\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CHANGE_CURRENT_PAGE, CHANGE_TIMER_FIRST_START, FINAL, START} from \"../../store/constants/gameInfo\";\r\nimport Clock from \"../Timer\";\r\n\r\nconst OPTIONS = [\r\n    {\r\n        id: 1,\r\n        src: 'cyrax.png',\r\n    },\r\n    {\r\n        id: 2,\r\n        src: 'jade.png',\r\n    },\r\n    {\r\n        id: 3,\r\n        src: 'jax.png',\r\n    },\r\n    {\r\n        id: 4,\r\n        src: 'johnny.png',\r\n    },\r\n    {\r\n        id: 5,\r\n        src: 'kabal.png',\r\n    },\r\n    {\r\n        id: 6,\r\n        src: 'kano.png',\r\n    },\r\n    {\r\n        id: 7,\r\n        src: 'kitana.png',\r\n    },\r\n    {\r\n        id: 8,\r\n        src: 'kung_laos.png',\r\n    },\r\n    {\r\n        id: 9,\r\n        src: 'liu_kang.png',\r\n    },\r\n    {\r\n        id: 10,\r\n        src: 'nightwolf.png',\r\n    },\r\n    {\r\n        id: 11,\r\n        src: 'ra.png',\r\n    },\r\n    {\r\n        id: 12,\r\n        src: 'scorpion.png',\r\n    },\r\n    {\r\n        id: 13,\r\n        src: 'smoke.png',\r\n    },\r\n    {\r\n        id: 14,\r\n        src: 'sonya.png',\r\n    },\r\n    {\r\n        id: 15,\r\n        src: 'stryker.png',\r\n    },\r\n    {\r\n        id: 16,\r\n        src: 'sub-zero.png',\r\n    },\r\n    {\r\n        id: 17,\r\n        src: 'quan_chi.png',\r\n    },\r\n    {\r\n        id: 18,\r\n        src: 'sheeva.png',\r\n    },\r\n    {\r\n        id: 19,\r\n        src: 'sindel.png',\r\n    },\r\n    {\r\n        id: 20,\r\n        src: 'young_shang_tsung.png',\r\n    }\r\n];\r\n\r\nconst Board = () => {\r\n    const dispatch = useDispatch();\r\n    const boardSize = useSelector(state => state.game.user.boardSize);\r\n    const cards = useMemo(() => getCurrentCards(OPTIONS, boardSize), []);\r\n    const [openedCard, setOpenedCard] = useState([]);\r\n    const [matched, setMatched] = useState([]);\r\n    const [cardsCounter, setCardsCounter] = useState(boardSize * boardSize);\r\n\r\n    const flipCardHandler = index => {\r\n        setOpenedCard((opened) => [...opened, index]);\r\n    }\r\n\r\n    const initMatchOptions = () => {\r\n        const pair = 2;\r\n\r\n        if (openedCard < pair) return;\r\n\r\n        const firstMatched = cards[openedCard[0]];\r\n        const secondMatched = cards[openedCard[1]];\r\n\r\n        if (secondMatched && firstMatched.id === secondMatched.id) {\r\n            setMatched([...matched, firstMatched.id]);\r\n            setCardsCounter(cardsCounter - pair);\r\n        }\r\n\r\n        if (openedCard.length === pair) {\r\n            setTimeout(() => setOpenedCard([]), 500);\r\n        }\r\n    }\r\n\r\n    const backHandler = () => {\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: START})\r\n        dispatch({type: CHANGE_TIMER_FIRST_START, payload: true})\r\n    }\r\n\r\n    const toFinal = () => {\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: FINAL})\r\n    }\r\n\r\n    useEffect(() => {\r\n        initMatchOptions();\r\n\r\n        if (cardsCounter === 0) {\r\n            toFinal();\r\n        }\r\n    }, [openedCard]);\r\n\r\n    const isVisible = (card, index) => {\r\n        let isFlipped = false;\r\n\r\n        if (openedCard.includes(index)) isFlipped = true;\r\n        if (matched.includes(card.id)) isFlipped = true;\r\n\r\n        return isFlipped\r\n    }\r\n\r\n    const gridStyle = (size) => {\r\n        return {\r\n            gridTemplate: `repeat(${size}, 1fr) / repeat(${size}, 1fr)`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <button onClick={backHandler}>Back</button>\r\n            <Clock cardsCounter={cardsCounter} />\r\n\r\n            <div\r\n                className=\"board\"\r\n                style={ gridStyle(boardSize) }\r\n            >\r\n                {\r\n                    cards && (\r\n                        cards.map((card, index) => {\r\n                            const isFlipped = isVisible(card, index)\r\n\r\n                            return (\r\n                                <Cell\r\n                                    isFlipped={isFlipped}\r\n                                    onClick={() => flipCardHandler(index)}\r\n                                    card={card}\r\n                                    key={index}\r\n                                />\r\n                            );\r\n                        })\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_RECORD, CHANGE_CURRENT_PAGE, CHANGE_TIMER_FIRST_START, RECORDS, START} from \"../../store/constants/gameInfo\";\r\n\r\nconst Final = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.game.user);\r\n\r\n    const changeTimerFirstStart = (isFirst) => {\r\n        dispatch({type: CHANGE_TIMER_FIRST_START, payload: isFirst})\r\n    }\r\n\r\n    const toStartHandler = () => {\r\n        changeTimerFirstStart(true);\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: START})\r\n    }\r\n\r\n    const toRecordsHandler = () => {\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: RECORDS})\r\n    }\r\n\r\n    const addRecord = () => {\r\n        dispatch({type: ADD_RECORD, payload: user})\r\n    }\r\n\r\n    useEffect(() => {\r\n        addRecord();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"game-container flex-center\">\r\n            <div className=\"menu-page\">\r\n                <h1>You won!</h1>\r\n                <h3>Your time: {user.time}</h3>\r\n                <button onClick={toStartHandler}>New game!</button>\r\n                <button onClick={toRecordsHandler}>Records</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Final;","import React from 'react';\r\n\r\nimport './tab.scss';\r\n\r\nconst Tab = ({isVisible, records}) => {\r\n    return (\r\n        <>\r\n            { isVisible && (\r\n                records.map((record, index) => {\r\n                    return (\r\n                        <div className=\"records-row\">\r\n                            <div>{index+ 1 }</div>\r\n                            <div>{record.name}</div>\r\n                            <div>{record.time}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tab;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Tab from \"../Tab/Tab\";\r\nimport {CHANGE_CURRENT_PAGE, CHANGE_TIMER_FIRST_START, FOUR, SIX, START, TWO} from \"../../store/constants/gameInfo\";\r\nimport TabButton from \"../Tab/TabButton\";\r\n\r\nconst Records = () => {\r\n    const dispatch = useDispatch();\r\n    const [activeTab, setActiveTab] = useState(TWO);\r\n    const records = useSelector(state => state.game.records);\r\n\r\n    const changeTimerFirstStart = (isFirst) => {\r\n        dispatch({type: CHANGE_TIMER_FIRST_START, payload: isFirst})\r\n    }\r\n\r\n    const onChangeValue = (event) => {\r\n        setActiveTab(event.target.value);\r\n    }\r\n\r\n    const sizeFilter = (size) => {\r\n        return records.filter(record => record.boardSize === size);\r\n    }\r\n\r\n    const toStartHandler = () => {\r\n        changeTimerFirstStart(true);\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: START})\r\n    }\r\n\r\n    const records2x2 = sizeFilter(TWO);\r\n    const records4x4 = sizeFilter(FOUR);\r\n    const records6x6 = sizeFilter(SIX);\r\n\r\n    return (\r\n        <div className=\"game-container direction-column jc-space-between\">\r\n            <div className=\"tab-buttons-box\" onChange={onChangeValue}>\r\n                <TabButton text=\"2x2\" value={TWO} name=\"boardSize\" defaultChecked={TWO} />\r\n                <TabButton text=\"4x4\" value={FOUR} name=\"boardSize\" />\r\n                <TabButton text=\"6x6\" value={SIX} name=\"boardSize\" />\r\n            </div>\r\n\r\n            <div className=\"records-box\">\r\n                <Tab isVisible={activeTab == TWO} records={records2x2} />\r\n                <Tab isVisible={activeTab == FOUR} records={records4x4} />\r\n                <Tab isVisible={activeTab == SIX} records={records6x6} />\r\n            </div>\r\n\r\n            <button onClick={toStartHandler}>New game!</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Records;","import React from 'react';\r\nimport {CHANGE_CURRENT_PAGE, FINAL, GAME, RECORDS, START} from \"../../store/constants/gameInfo\";\r\nimport Start from \"../Info/Start\";\r\nimport Board from \"./Board\";\r\nimport Final from \"../Info/Final\";\r\nimport Records from \"../Info/Records\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport './game.scss';\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.game.currentPage);\r\n\r\n    const renderCurrentPage = () => {\r\n        switch (page) {\r\n            case START:\r\n                return <Start />\r\n            case GAME:\r\n                return <Board />\r\n            case FINAL:\r\n                return <Final />\r\n            case RECORDS:\r\n                return <Records />\r\n        }\r\n    }\r\n\r\n    const back = () => {\r\n        dispatch({type: CHANGE_CURRENT_PAGE, payload: START})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src=\"../../logo.svg\" alt=\"\"/>\r\n            { renderCurrentPage() }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;","import {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport Game from \"./components/Game/Game\";\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n      <Provider store={store}>\n          <div className=\"App\">\n              <Game />\n          </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to Info measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}